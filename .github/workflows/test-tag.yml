name: Test Workflow

on:
  workflow_dispatch:
    inputs:
      kernel-version:
        type: string
        required: true
      proxmox-version:
        type: string
        required: true

env:
  DEBIAN_FRONTEND: noninteractive
  KERNEL_VERSION: "6.2.16-99-pve"
  PROXMOX_VERSION: "8.0"
  #RELEASE_TITLE: "PVE kernel 6.2.16.99-pve-relaxablermrr release (Promox 8.0}"
  RELEASE_TITLE: "Proxmox VE kernel ${{ inputs.kernel-version }}-relaxablermrr (Proxmox VE ${{ inputs.proxmox-version }})"

jobs:
  test:
    name: This is a tag test job
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Create release tag
        uses: actions/github-script@v6
        env:
          CLIENT_PAYLOAD: ${{ toJSON(github.event.client_payload) }}
        with:
          script: |
            const tagName = "${{ inputs.kernel-version }}";
            const branch = "main";
            const tagger = {
              name: "Github Actions",
              email: "github-actions@github.com"
            };

            const { owner, repo } = context.repo;

            console.log("Finding out the HEAD hash");
            let ref = `heads/${branch}`;
            const head = await github.rest.git.getRef({ owner, repo, ref });
            console.log("head: ", head);
            const sha = head.data.object.sha;

            // Create tag object. This is only needed for annotated tags
            console.log(`Creating tag ${tagName}`);
            const newTag = await github.rest.git.createTag({
                owner,
                repo,
                tag: tagName,
                message: process.env.RELEASE_TITLE,
                object: sha,
                type: "commit",
                tagger
                });

            // Create tag reference
            ref = `refs/tags/${tagName}`;
            console.log(`Creating ref for tag ${tagName} (${newTag.data.sha})`);
            const newRef = await github.rest.git.createRef({ owner, repo, ref, sha: newTag.data.sha });
